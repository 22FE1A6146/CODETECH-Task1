import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder

# Step 1: Load Data
data = {
    'Name': ['Alice', 'Bob', 'Charlie', 'David', np.nan],
    'Age': [25, 30, np.nan, 35, 40],
    'Salary': [50000, 60000, np.nan, 80000, 100000],
    'Purchased': ['Yes', 'No', 'Yes', 'No', 'Yes']
}
df = pd.DataFrame(data)

print("Raw Data:")
print(df)

# Step 2: Handle Missing Values
# Fill missing numerical values with the column mean
df['Age'].fillna(df['Age'].mean(), inplace=True)
df['Salary'].fillna(df['Salary'].mean(), inplace=True)
# Drop rows with missing categorical values
df.dropna(subset=['Name'], inplace=True)

print("\nAfter Handling Missing Values:")
print(df)

# Step 3: Encode Categorical Data
# Encode the 'Purchased' column using LabelEncoder
label_encoder = LabelEncoder()
df['Purchased'] = label_encoder.fit_transform(df['Purchased'])

print("\nAfter Encoding Categorical Data:")
print(df)

# Step 4: Feature Scaling
scaler = StandardScaler()
df[['Age', 'Salary']] = scaler.fit_transform(df[['Age', 'Salary']])

print("\nAfter Feature Scaling:")
print(df)

# Step 5: Split Data into Features and Target
X = df[['Age', 'Salary']]
y = df['Purchased']

# Step 6: Split Data into Training and Test Sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print("\nTraining Features:")
print(X_train)
print("\nTest Features:")
print(X_test)
print("\nTraining Target:")
print(y_train)
print("\nTest Target:")
print(y_test)
